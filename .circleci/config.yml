version: 2.1


jobs:
  create_infrastructure: # Job for lab01
    environment:
      INSTANCE_NAME: "WEBSVR"
    docker:
      - image: amazon/aws-cli

    steps:
      - checkout
      - run:
          name: create ec2 instance stack in cloudformation
          command: |
            ls -a Project03
            aws cloudformation deploy \
              --template-file Project03/lab01/template.yml \
              --stack-name ${INSTANCE_NAME}

      - run:
          name: retrive ec2 server ip and append into inventory.txt
          command: |
            cmd="$(aws ec2 describe-instances \ 
              --fielters "Name=tags:Name,Values=${INSTANCE_NAME}" \ 
              --query "Resources[*].Instances[*].PublicIpAddress" \
              --output text)"
            if [ "$cmd" != "None" || "$cmd" != " " ]
            then
              inventory="./Project03/lab00/inventory"
              echo "[webserver]" > $inventory
              echo "$cmd" >> $inventory
              exit 0
            else
              exit 1
            fi
          when: on_success

  configure_infrastructure: # Job for lab02
    docker:
      - image: python:3.7-alpine3.11

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["4d:0b:29:64:e7:f8:19:f7:0a:76:80:38:8a:fe:be:b6"]
      
      - run:
          name: Install dependencies
          command: 
            apk add --update ansible

      - run:
          name: Configure Server
          command: |
            cd ./Project03/lab00/
            ansible-playbook -i inventory playbook.yml

workflows:
  Infrastructure_Workflow:
    jobs:
      - create_infrastructure # lab01
      - configure_infrastructure: #lab02
          requires:
          - create_infrastructure

  