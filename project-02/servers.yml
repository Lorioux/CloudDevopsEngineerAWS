Description:
  Magido Mascate / Udacity Cloud DevOps Engineer Project 2

Parameters:
  EnvironmentName:
    Description: Stack deployment environment Identifier 
    Type: String
    Default: CourseWork02
  
  AMIIdentifier:
    Type: String 
    Default: ami-013f17f36f8b1fefb
  
  EC2Type:
    Type: String 
    Default: t2.xlarge

  SRVConfigName:
    Type: String 
    Default: WebServerLaunchConfigV1

  SRVAcessKeyName:
    Type: String
    Default: SecureServerKEY

  LTemplateVersion:
    Type: Number 
    Default: 1

Resources:
  PUBSERVERSSECGRP:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: PublicServersSecGroup
      GroupName: PublicServersSecGroup
      SecurityGroupEgress: 
      -   IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
      -   IpProtocol: tcp 
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      -   IpProtocol: tcp 
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      -   IpProtocol: tcp 
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags: 
      -   Key: Name 
          Value: !Join ['-',[!Ref EnvironmentName, 'SECGRP', 'PUB', 'SVRs']]
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"  

  PRTSERVERSSECGRP:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: PrivateServersSecGroup
      GroupName: PrivateServersSecGroup
      SecurityGroupEgress: 
      -   IpProtocol: tcp 
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
      -   IpProtocol: tcp 
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      -   IpProtocol: tcp 
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      -   IpProtocol: tcp 
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags: 
      -   Key: Name 
          Value: !Join ['-', [!Ref EnvironmentName, 'SECGRP', 'PRT', 'SVRs']]
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"

  IAMROLEForS3ACCESS:
    #Session Root Role to access S3 from EC2 (Servers) instances
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
            -   "sts:AssumeRole"
      Policies:
      - PolicyName: SERVERROOT 
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
              -  "S3:GetObject"
              Resource: "*"

      RoleName: 
        !Join ['-', [!Ref EnvironmentName, "ServerIAMRoleForS3", 'ROLE']]
      
      Tags: 
      -   Key: Name 
          Value: !Join ['-', [!Ref EnvironmentName, 'EC2-TOACCESS-S3', 'ROLE']]

  ROOTPROFILEForSERVERS:
    Type: AWS::IAM::InstanceProfile
    DependsOn: IAMROLEForS3ACCESS
    Properties:
      InstanceProfileName: EC2-ToACCESS-S3
      Path: "/"
      Roles:
      -  !Ref IAMROLEForS3ACCESS

  SRVSLAUNCHCONFIG:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: !Ref SRVConfigName
      AssociatePublicIpAddress: false # Set to true for test
      
      ImageId: 
        !Ref AMIIdentifier
      
      InstanceType: 
        !Ref EC2Type
      KeyName: 
        !Ref SRVAcessKeyName
      SecurityGroups: 
      -   !Ref PRTSERVERSSECGRP
      
      BlockDeviceMappings: 
      -   DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 30
            VolumeType: gp2
      
      IamInstanceProfile: !GetAtt ROOTPROFILEForSERVERS.Arn
      
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install unzip awscli -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          cd /var/www/html
          sudo aws s3 cp s3://udacity-demo-1/udacity.zip .
          sudo unzip -o udacity.zip
    
  SRVSLAUNCHTEMPLATE:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref AMIIdentifier
        InstanceType: !Ref EC2Type
        KeyName: 
          !Ref SRVAcessKeyName

        BlockDeviceMappings: 
        -   DeviceName: "/dev/sda1"
            Ebs:
              VolumeSize: 30
              VolumeType: gp2

        IamInstanceProfile: 
          Arn: !GetAtt ROOTPROFILEForSERVERS.Arn
            
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt-get update -y
            sudo apt-get install unzip awscli -y
            sudo apt-get install apache2 -y
            sudo systemctl start apache2.service
            cd /var/www/html
            sudo aws s3 cp s3://udacity-demo-1/udacity.zip .
            sudo unzip -o udacity.zip

  PUBWEBSRVRS01:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
      -   AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet: 
            - Ref: PUBSERVERSSECGRP
          SubnetId: 
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PUB-1-SNETID"
      LaunchTemplate:
        LaunchTemplateId:
          !Ref SRVSLAUNCHTEMPLATE
        Version: 1          
      Tags:
      -   Key: Name 
          Value: !Join ['-', [!Ref EnvironmentName, 'PUB', 'SRV1']]

  PUBWEBSRVRS02:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
      -   AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet: 
            - Ref: PUBSERVERSSECGRP
          SubnetId: 
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PUB-2-SNETID"

      LaunchTemplate:
        LaunchTemplateId:
          !Ref SRVSLAUNCHTEMPLATE
        Version: !Ref LTemplateVersion 

      Tags:
      -   Key: Name 
          Value: !Join ['-', [!Ref EnvironmentName,'PUB','SRV2']]

Outputs:
  SRVSLAUNCHCONFIGOUT:
    Description: Web servers launch configuration to use with auto scaling target groups
    Value: !Ref SRVSLAUNCHCONFIG
    Export:
      Name: !Join ['-', [!Ref EnvironmentName, "LCFG"]]

  SRVSLAUNCHTEMPLATEOUT:
    Description: Web servers launch configuration to launch two servers in the public subnets
    Value: !Ref SRVSLAUNCHTEMPLATE
    Export:
      Name: !Join ['-', [!Ref EnvironmentName, "LTMP"]]

  PUBSERVERSSECGRPOUT:
    Description: Public Web Servers Ssecurity Group
    Value: !Ref PUBSERVERSSECGRP

  PRTSERVERSSECGRPOUT:
    Description: Private Web Servers Ssecurity Group
    Value: !Ref PRTSERVERSSECGRP

  PUBWEBSRVRS01OUT:
    Description: Public server 1
    Value: !Ref PUBWEBSRVRS01

  PUBWEBSRVRS02OUT:
    Description: Public server 2
    Value: !Ref PUBWEBSRVRS02